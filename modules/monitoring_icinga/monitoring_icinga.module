<?php
/**
 * @file
 * Monitoring Nagios module bootstrap file.
 */

use Drupal\monitoring\Entity\SensorConfig;

/**
 * Implements hook_menu().
 */
function monitoring_icinga_menu() {
  $items['admin/config/system/monitoring/icinga'] = array(
    'title' => 'Icinga',
    'description' => 'Configure Nagios/Icinga connector',
    'route_name' => 'monitoring_icinga_config',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/system/monitoring/icinga/active'] = array(
    'title' => 'Active check',
    'description' => 'Configure Nagios/Icinga connector for active checks',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/system/monitoring/icinga/passive'] = array(
    'title' => 'Passive check',
    'description' => 'Configure Nagios/Icinga connector for passive checks',
    'route_name' => 'monitoring_icinga_config_passive',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/system/monitoring/icinga/passive-with-freshness'] = array(
    'title' => 'Passive check /w freshness',
    'description' => 'Configure Nagios/Icinga connector for passive checks with freshness check',
    'route_name' => 'monitoring_icinga_config_passive_with_freshness',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Gets service description for Icinga.
 *
 * This is vital for matching the generated service (sensor) config and
 * submitting passive check.
 *
 * @param SensorConfig $sensor_config
 *   Sensor config object.
 *
 * @return string
 *   Icinga service description.
 */
function monitoring_icinga_service_description(SensorConfig $sensor_config) {
  return $sensor_config->getCategory() . ' - ' . $sensor_config->getLabel() . ' - ' . $sensor_config->id();
}

/**
 * Get icinga status mappings.
 *
 * @return array
 *   Mapped statuses.
 */
function monitoring_icinga_status_codes() {
  return array(
    'OK' => 0,
    'WARNING' => 1,
    'CRITICAL' => 2,
    'UNKNOWN' => 3,
  );
}
