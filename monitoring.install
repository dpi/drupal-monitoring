<?php
/**
 * @file
 * Monitoring base install file.
 */

use Drupal\Component\Utility\String;
use Drupal\monitoring\Entity\SensorInfo;
use Drupal\node\Entity\NodeType;
use Drupal\search_api\Entity\Index;

/*
 * Implements hook_install().
 *
 * Declares initial set of node sensors and search api sensors.
 */
function monitoring_install() {
  foreach (NodeType::loadMultiple() as $node_type) {
    $sensor = SensorInfo::create(array(
      'id' => 'node_new_' . $node_type->type,
      'label' => String::format('New @type nodes', array('@type' => $node_type->name)),
      'description' => String::format('New nodes of type @type', array('@type' => $node_type->name)),
      'sensor_id' => 'database_aggregator',
      'value_label' => String::format('@type nodes', array('@type' => $node_type->name)),
      'category' => 'Content',
      'status' => TRUE,
      'caching_time' => 600,
      'settings' => array(
        'thresholds' => array(
          'type' => 'falls',
        ),
        'table' => 'node_field_data',
        'conditions' => array(
          array('field' => 'type', 'value' => $node_type->type),
        ),
        'time_interval_field' => 'created',
        'time_interval_value' => 60 * 60 * 24,
      ),
    ));
    $sensor->save();
  }
  if (\Drupal::moduleHandler()->moduleExists('search_api')) {
    foreach (Index::loadMultiple() as $index) {
      $sensor = SensorInfo::create(array(
        'id' => 'search_api_' . $index->machine_name,
        'label' => String::format('Search index queue size of @index', array('@index' => $index->name)),
        'sensor_id' => 'search_api_unindexed',
        'value_label' => 'Unindexed items',
        'category' => 'Search API',
        // Cache for 15 minutes.
        'caching_time' => 900,
        'status' => TRUE,
        'settings' => array(
          'index_id' => $index->id(),
        ),
      ));
      $sensor->save();
    }
  }
}
