<?php
/**
 * @file
 * Contains \MonitoringElysiaTest
 */

/**
 * Elysia sensor tests.
 */
class MonitoringElysiaTest extends DrupalWebTestCase {

  protected $profile = 'testing';

  static function getInfo() {
    return array(
      'name' => 'Monitoring Elysia',
      'description' => 'Elysia sensor tests.',
      'group' => 'Monitoring',
      'dependencies' => array('elysia_cron'),
    );
  }

  /**
   * {@inheritdoc}
   */
  function setUp() {
    parent::setUp(array('monitoring', 'monitoring_test', 'elysia_cron'));
  }

  /**
   * Runs elysia cron tests separately as enabled elysia_cron module blows up
   * other tests due to regular cron fail.
   */
  function testElysiaCron() {

    elysia_cron_set('system_cron');
    monitoring_sensor_settings_save('elysia_system_cron_last_execution', array(
      'enabled' => TRUE,
    ));
    monitoring_sensor_settings_save('elysia_system_cron_last_run', array(
      'enabled' => TRUE,
    ));

    db_query('UPDATE {elysia_cron} SET last_execution_time = :last_execution_time, last_run = :last_run WHERE name = :name',
      array(':last_execution_time' => 2, ':last_run' => REQUEST_TIME - 10, ':name' => 'system_cron'));

    $result = monitoring_sensor_run('elysia_system_cron_last_execution', TRUE);
    $this->assertEqual($result->getSensorValue(), 2);
    $result = monitoring_sensor_run('elysia_system_cron_last_run', TRUE);
    // The sensor value is 10 as we inserted an entry that has the last_run
    // value 10 seconds ago to REQUEST_TIME.
    $this->assertEqual($result->getSensorValue(), 10);
  }

}
